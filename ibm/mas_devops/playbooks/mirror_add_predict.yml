---
# Mirrors the following content which is REQUIRED to add Maximo Predict to an existing
# Maximo Application Suite Core Services installation:
# 0. Common services (make sure to mirror MAS Core with common services)
# 1. CP4D
# 2. Watson Studio and it's dependencies
# 3. Watson Machine Learning
# 4. Analytics Engine
# 5. IBM Maximo Predict
#
# This playbook aligns with the ibm.mas_devops.oneclick_add_predict playbook

- hosts: localhost
  any_errors_fatal: true

  vars:
    catalog_tag: "{{ lookup('env', 'MAS_CATALOG_VERSION') | default ('v8-230414-amd64', True) }}"
    mas_channel: "{{ lookup('env', 'MAS_CHANNEL') | default ('8.10.x', True) }}"
    mirror_mode: "{{ lookup('env', 'MIRROR_MODE') | default ('direct', True) }}"

    mirror_cp4d: "{{ lookup('env', 'MIRROR_CP4D') | default ('True', True) | bool }}"
    mirror_wsl: "{{ lookup('env', 'MIRROR_WSL') | default ('True', True) | bool }}"
    mirror_wml: "{{ lookup('env', 'MIRROR_WML') | default ('True', True) | bool }}"
    mirror_spark: "{{ lookup('env', 'MIRROR_SPARK') | default ('True', True) | bool }}"

    mirror_mas_predict: "{{ lookup('env', 'MIRROR_MAS_PREDICT') | default ('True', True) | bool }}"

  pre_tasks:
    # Note that REGISTRY_USERNAME and REGISTRY_PASSWORD are not required.
    # They are only needed if you have set up authentication on your private registry
    - name: Check for required environment variables
      assert:
        that:
          - lookup('env', 'REGISTRY_PUBLIC_HOST') != ""
          - lookup('env', 'REGISTRY_PUBLIC_PORT') != ""
          - lookup('env', 'IBM_ENTITLEMENT_KEY') != ""
        fail_msg: "One or more required environment variables are not defined"
    - name: Load CASE bundle versions
      include_vars:
        file: "{{ playbook_dir }}/../common_vars/casebundles/{{ catalog_tag }}.yml"

  roles:
    # 1. CP4D
    # -------------------------------------------------------------------------
    - name: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_cp4d
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-cp-datacore
        case_version: "{{ cp4d_platform_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: true

    - name: ibm.mas_devops.mirror_images
      when: mirror_cp4d
      vars:
        manifest_name: ibm-cp-datacore
        manifest_version: "{{ cp4d_platform_version }}"

    # 2.1. IBM Watson Studio
    # -------------------------------------------------------------------------
    - name: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wsl
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-wsl
        case_version: "{{ wsl_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: true

    - name: ibm.mas_devops.mirror_images
      when: mirror_wsl
      vars:
        manifest_name: ibm-wsl
        manifest_version: "{{ wsl_version }}"

    # 2.2. IBM Watson Studio and Watson Machine Learning dependency - ibm-ccs
    # -------------------------------------------------------------------------
    - name: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wsl or mirror_wml
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-ccs
        case_version: "{{ wsl_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - name: ibm.mas_devops.mirror_images
      when: mirror_wsl or mirror_wml
      vars:
        manifest_name: ibm-ccs
        manifest_version: "{{ wsl_version }}"

    # 2.3. IBM Watson Studio dependency - ibm-datarefinery
    # -------------------------------------------------------------------------
    - name: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wsl
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-datarefinery
        case_version: "{{ wsl_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - name: ibm.mas_devops.mirror_images
      when: mirror_wsl
      vars:
        manifest_name: ibm-datarefinery
        manifest_version: "{{ wsl_version }}"

    # 2.4. IBM Watson Studio depedency - ibm-wsl-runtimes
    # -------------------------------------------------------------------------
    - name: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wsl
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-wsl-runtimes
        case_version: "{{ wsl_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - name: ibm.mas_devops.mirror_images
      when: mirror_wsl
      vars:
        manifest_name: ibm-wsl-runtimes
        manifest_version: "{{ wsl_version }}"

    # # 3. IBM Watson Machine Learning
    # # -------------------------------------------------------------------------
    - name: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wml
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-wml-cpd
        case_version: "{{ wml_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: true

    - name: ibm.mas_devops.mirror_images
      when: mirror_wml
      vars:
        manifest_name: ibm-wml-cpd
        manifest_version: "{{ wml_version }}"

    # 5. Analytics Engine (Spark)
    # -------------------------------------------------------------------------
    - name: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_spark
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-analyticsengine
        case_version: "{{ spark_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - name: ibm.mas_devops.mirror_images
      when: mirror_spark
      vars:
        manifest_name: ibm-analyticsengine
        manifest_version: "{{ spark_version }}"

    # 5. IBM Maximo Predict
    # -------------------------------------------------------------------------
    - name: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_mas_predict
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-mas-predict
        case_version: "{{ mas_predict_version[mas_channel] }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - name: ibm.mas_devops.mirror_images
      when: mirror_mas_predict
      vars:
        manifest_name: ibm-mas-predict
        manifest_version: "{{ mas_predict_version[mas_channel] }}"
